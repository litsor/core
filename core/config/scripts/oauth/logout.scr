# OauthLogout

/config = {} script "OauthConfig"

/ = /cookies/session then {{
  /payload = {token: /cookies/session} script "ValidateJWT"
  / = /payload then {{
    mutation {
      createOauthLogout(input: {
        aud: /payload/aud,
        sub: /payload/sub,
        date: timestamp date {}
      }) { id }
    }
  }}
}}

/user = / script "LoadUser"

/ = /user then {{
  # Get used token from headers.
  /authorization ~ /"headers/x-authorization"
  /authorization ~ /headers/authorization
  /token = /authorization regexp "^Bearer ([^.]+\\.[^.]+\\.[^.]+)$"
  /token = /token/1
  /payload = fromJson fromBase64url (/token split ".") pick /1
  mutation {
    createOauthLogout(input: {
      aud: /payload/aud,
      sub: /payload/sub,
      date: timestamp date {}
    }) { id }
  }
}}

/ = {
  status: 302,
  body: "Redirecting...",
  redirect: "/",
  cookies: {
    session: {
      value: "",
      path: "/oauth"
    }
  }
}
